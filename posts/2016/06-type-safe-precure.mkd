---
title: Haskellでプリキュアを作ってみた #cure_advent
author: Yuji Yamamoto
tags: Haskell, Precure
date: December 11, 2016
...
---

この記事は「[プリキュア Advent Calendar 2016](http://www.adventar.org/calendars/1359)」11日目の記事です。  
現時点で11日目であるにもかかわらず私が最初の投稿者になってしまいそうで悲しいですorz. 遅れてもいいので登録したなら投稿はしていただきたい！

めげている場合ではありません。掲題通り、Haskellでプリキュアを実装しました。  
何をいっているんだお前はと思うかたもいらっしゃるかもしれませんが、要はプリキュアの各作品の変身シーンの台詞や設定などを収録したライブラリーです。  
似たようなものは各言語に存在します。過去には[ACME::PrettyCure](https://github.com/kan/p5-acme-prettycure)をはじめ、[Pycure](https://github.com/drillbits/pycure)や[Clocure](https://gist.github.com/kaosf/67639b8a7d33cd0d14ff)などが作られました。  
そしてもちろん当Advent Calendarの主催にしてフルスタックキュアエンジニア、sue445さんの[rubicure](https://github.com/sue445/rubicure)も忘れては行けません。その他の実装は[こちらのまとめ](http://qiita.com/sue445/items/b41a4f5bdca46f1736c3)をご覧ください。

今回私が作ったプリキュア実装は[typesafe-precure](https://github.com/igrep/typesafe-precure)といいます。[hackage](http://hackage.haskell.org/package/typesafe-precure)にも先ほど上げました！

以下、READMEの和訳も兼ねて特徴を紹介します。

**⚠️注意⚠️** ver. 0.8.0.1 より、変身アイテムに装備品（`Mofurun`に対する`LinkleStoneDia`など）を付ける場合の仕様が変わり、この日本語版READMEに書いてあるサンプルコードは動かなくなりました。新しい方法については英語のみですが[最新のREADME](https://github.com/igrep/typesafe-precure/blob/master/README.md)をご覧ください。

# タイプセーフプリキュア！

プリキュアの変身と浄化技の、型安全な実装。  
Haskell製。

## 機能

- プリキュアが変身する際の台詞や、浄化技（必殺技）を発する際の台詞を集めたコレクション。
    - 現時点で初代から「魔法つかいプリキュア！」までサポートしています（キュアエコーも含みます）！
- 変身時の台詞や浄化技の台詞を再生するためのモナド。

## 特徴

すべての女の子・プリキュア・プリキュアのスタイル・特殊アイテム、**それぞれに固有の型**を割り当てています。  
そのため、正しい組み合わせによる変身、浄化技の発動しかできないように作られています。  
結果、rubicureやclocureなど他のプリキュア実装に比べて**非常に**使いにくくなってしまっていますが、より正しい設定で再現するようになっています。  
このライブラリーにとっては「正しさ」の方が優先なのです。

## インストール方法

```bash
# unicode-showは必須ではありませんが、GHCiで試す場合は入れた方がいいでしょう。
$ stack install typesafe-precure unicode-show
## ... あるいは
$ cabal install typesafe-precure unicode-show
```

## 使用例

**注意**:

- GHCi上で日本語を`show`する場合、[unicode-show](https://github.com/nushio3/unicode-show)を利用してください。
- 下記の出力結果は私が手で見た目を整えています。

### 変身したプリキュアなどの取得

```haskell
$ ghci -interactive-print=Text.Show.Unicode.uprint

ghci> :m ACME.PreCure
ghci> transformationSpeech (Mirai, Liko) (Mofurun LinkleStoneDia)
[ "キュアップ・ラパパ！　ダイヤ！"
, "ミラクル・マジカル・ジュエリーレ！"
, "ふたりの奇跡！キュアミラクル！"
, "ふたりの魔法！キュアマジカル！"
, "魔法つかいプリキュア！！"
]
ghci> transformedStyle (Mirai, Liko) (Mofurun LinkleStoneRuby)
(CureMiracle_Ruby, CureMagical_Ruby)
ghci> purificationSpeech (CureMiracle_Ruby, CureMagical_Ruby) (LinkleStick LinkleStoneRuby, Mofurun LinkleStoneRuby)
[ "リンクルステッキ！"
, "(モッフー！)"
, "ルビー！紅の情熱よ私達の手に！"
, "フルフルリンクル！"
, "プリキュア！ルビー・パッショナーレ！"
]
```

### プリキュアモナド

```haskell
ghci> :{
ghci> let scene = do
....>       say "この罪を抱いたまま、もう一度、グランプリンセスを目指す！"
....>       scarlet <- transform Towa (PrincessPerfume DressUpKey_Scarlet)
....>       scarletModeElegant <- transform scarlet (PrincessPerfume DressUpKey_Phoenix)
            purify scarletModeElegant (ScarletViolin DressUpKey_Phoenix)
ghci> :}
ghci> :t scene
scene :: ACME.PreCure.Monad.PreCureMonad ()
```

#### 純粋な関数として変身したり浄化したりする

```haskell
ghci> composeEpisode scene
[ "この罪を抱いたまま、もう一度、グランプリンセスを目指す！"
, "プリキュア！プリンセスエンゲージ！"
, "深紅の炎のプリンセス！キュアスカーレット！"
, "冷たい檻に閉ざされた夢、返していただきますわ。"
, "お覚悟を決めなさい！"
, "エクスチェンジ！モードエレガント！"
, "スカーレット・バイオリン！フェニックス！"
, "羽ばたけ炎の翼！"
, "プリキュア！ フェニックス・ブレイズ！"
, "ごきげんよう。"
]
```

#### IOアクションとして変身したり浄化したりする

台詞が一行ごとに出力されます。rubicureに似た機能があったのでインスパイアされました。

```haskell
ghci> printEpisode scene
この罪を抱いたまま、もう一度、グランプリンセスを目指す！
プリキュア！プリンセスエンゲージ！
深紅の炎のプリンセス！キュアスカーレット！
冷たい檻に閉ざされた夢、返していただきますわ。
お覚悟を決めなさい！
エクスチェンジ！モードエレガント！
スカーレット・バイオリン！フェニックス！
羽ばたけ炎の翼！
プリキュア！ フェニックス・ブレイズ！
ごきげんよう。
```

以上が現在2016年12月11日時点のREADMEです。  

# 苦労したところとか、気合いを入れたところとか。

開発は[rubicureのconfig](https://github.com/sue445/rubicure/tree/master/config/girls)を見ながら行いましたが、ついついこだわってしまい、コピペはしつつも、原則youtubeなど(DVDではないですすみません...)を見返して、自分が感じた表記の違いなどを考慮しながら書いたため非常に時間がかかってしまいました。「正しさ」にこだわった結果です。

以下は箇条書きでもろもろを。

- 特殊なフォームの扱いには悩みました。READMEに書いた使用例のように、多くの特殊なフォームでは変身シーンと浄化技が一つのシーンとして描かれているため、ちょっと不自然に感じるのではないかと思います。
    - 最初に魔法つかいプリキュアを実装しながら設計を考えたのですが、それに引きずられてしまった結果です。
- スイートプリキュアについてはちゃんと変身する人数ごとに台詞を分けています。以下のコードを試してみてください。
    - `transformationSpeech (Hibiki, Kanade) (CureModules Dory, CureModules Rery)`
    - `transformationSpeech (Hibiki, Kanade, Ellen) (CureModules Dory, CureModules Rery, CureModules Lary)`
    - `transformationSpeech (Hibiki, Kanade, Ellen, Ako) (CureModules Dory, CureModules Rery, CureModules Lary, CureModules Dodory)`
- 複数のメンバーが同じ変身アイテムを使って変身する際の引数も悩みました。「実際には違うアイテム」と判断したものはそれぞれ分けているのですが（例: `LovelyCommune`, `PreCard`）、そうでないものもあります（例: `CureMo`）。
    - そのためYes! プリキュア5が変身するときは`transform (Nozomi, Rin, Urara, Komachi, Karen) PinkyCatch`です。実際にはピンキーキャッチュは5つ使っているので、ちょっと不自然に聞こえるかもしれません。
    - 使い勝手よりも正しさを重視、とは言いましたが、この件については今でも悩んでいます。
- キュアエコーの変身アイテムは「プリキュアになりたいという思い (`FeelingToBePreCure`)」です。もうちょっと適切な表現があれば教えてください。`NonItemPurification`と同様に`NonItemTransformation`を作るつもりはありません。
- Go! プリンセスプリキュアは最後に作ったためか、勢い余って大半のドレスアップキーとその浄化技を実装してしまいました。キュアスカーレットのドレスアップキーの組み合わせが思いの外イレギュラーで難しかったです。これだけはBlu-rayも見返せてよかった。

# みなさんにお願い: 変身や浄化技・必殺技の台詞を募集します！

正しさにこだわって実装したtypesafe-precureですが、残念ながら浄化技やプリキュアの特殊なフォームは**一部しか実装されていません**。時間の力には勝てませんでした。  
そのため、みなさんの好きなあの技・フォームがない可能性が十分あります。そうした場合は、[こちらのルールにしたがって](https://github.com/igrep/typesafe-precure/blob/master/CONTRIBUTING.md)**報告していただけると幸いです**！  
また、もちろん誤字・脱字や設定の大きな間違いについても受け付けます（キリがなくなりそうな状態になると私の一存でクローズするかもしれません。あらかじめご容赦を）。

以下が報告用フォームです。GitHubアカウントがないと報告できません。あしからず。

[New Issue · igrep/typesafe-precure](https://github.com/igrep/typesafe-precure/issues/new)

# 謝辞

rubicureを作ったsue445さん始め、参考にした下記のサイトを編集されたみなさん、大変ありがとうございました！  
みなさんの多大な努力によって、世界に新たなるプリキュア（のプログラミング言語による実装）が生まれました！  
今後も精一杯頑張ってリポジトリーの平和を守りますので、今後もよろしくお願いします。 vim(\_ \_)mer

- Wikipediaの各種プリキュアのページ（日本語版・英語版）
    - [プリキュアシリーズ - Wikipedia](https://ja.wikipedia.org/wiki/%E3%83%97%E3%83%AA%E3%82%AD%E3%83%A5%E3%82%A2%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA)
    - [Pretty Cure - Wikipedia](https://en.wikipedia.org/wiki/Pretty_Cure)
- 英語版WikiaのプリキュアWiki
    - [Pretty Cures | Pretty Cure Wiki | Fandom powered by Wikia](http://prettycure.wikia.com/wiki/Pretty_Cure)
- [プリキュアアイテム一覧 (ぷりきゅああいてむいちらん)とは【ピクシブ百科事典】](http://dic.pixiv.net/a/%E3%83%97%E3%83%AA%E3%82%AD%E3%83%A5%E3%82%A2%E3%82%A2%E3%82%A4%E3%83%86%E3%83%A0%E4%B8%80%E8%A6%A7)

それともっと大事な、忘れてはいけない、東映アニメーション様を始めプリキュアという素晴らしいアニメ作りに携わるすべてのみなさん。  
また妙なものを作ってしまい恐縮ですが、これからもわれわれファンが楽しく二次創作に励めるような、わくわくもんの作品を作り続けてください！  
応援しております！

# 次回予告

- 明日の[プリキュア Advent Calendar 2016](http://www.adventar.org/calendars/1359)は、shinya deguchiさんの記事です。よろしくお願いします。
- ちょうど1週間後の[Haskell Advent Calendar 2016](http://qiita.com/advent-calendar/2016/haskell)の私の記事では、今回作ったtypesafe-precureの、もうちょっと技術的な詳細を解説します。キュアップ・ラパパ！来週もいい記事にな～れ！
