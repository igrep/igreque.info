---
title: #Yokohamarb 50回目で発表したけど残念な出来だったので私を変えたN冊を今更紹介する。
author: Yuji Yamamoto
tags: Perl, 反社会学講座
...
---

なんと開催から1週間以上も経ってしまいましたが、報告です。 \
先週[Yokohama.rb Monthly Meetup #50](http://yokohamarb.doorkeeper.jp/events/14212)に参加+発表しました。 \
以下が私の発表です。

[緑化のコツ](/slides/2014-11-08-tips-for-green-streak.html)

が、かつてないほどガッカリな発表だったので、Slideshareには上げません。 \
以下反省点。

- 事前の練習不足なためか、尋常じゃないぐらい緊張してしまい、体が震えてまともに喋れなかった。
    - 過去にも何度か同じ失敗をしている。どういうパターンでこうなるのかまだはっきり分からないのが悔しい。事前に自分のテンションを高く持って行けてないとこうなるような気がする。
- 「緑化のコツ」ではなく「電車プログラミングの方法」として発表すべきだった。
    - 毎日通勤電車で立ちながらタブレットを縦持ちしてコードを書いている、という肝心な点を伝え忘れていた [^tokoya]。
- 後、関係ないけど手持ちの現金が少なすぎて懇親会費用で借りを作ってしまった...。

[^tokoya]: ちなみに、今この記事は散髪屋の待ち時間を利用して座りながら縦持ちして書いています。素直にキーボードを持ってくればよかったのですが、タブレットだけのほうが当然軽いので、つい癖で。

# 私を変えたN冊

さて、個人的な反省はこの辺にして、本題の私を変えた本についていろいろ書きます。
普通にみなさんのように本の話しをすれば良かったですね。
無理に1冊に絞らなくても、何冊か紹介するという手もありましたし。

以下、恐らく読んだであろう順に。

## パオロ・マッツァリーノ「反社会学講座」

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=poe02-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4480423567" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

正直なところ詳しい内容をほとんど覚えておらず、学校の図書室（当時高校生でした）で読んだため見返すことさえ出来ないのですが[^web]、
これを読んだ当時 \
「自分はなんて今までクソマジメでクソつまらない生き方をしていたんだろう！」と、それまでの常識がガラガラと崩れるほどの衝撃を感じました。

[^web]: ネットで読めるバージョンがあるじゃん！という突っ込みはなしで。結構書籍版のほうが加筆されてるはずですし...。

パオロ・マッツァーリノさんのその後の著書でもしばしば言及される「人間いいかげん史観」で言うように、
人間はもっとダメで、昔からできることを「いいかげん」にしかやってこなかった、
みんな真面目くさってもっともらしいことを言っているけど、案外大したことないし、
そうした人が世の中をつまらなくしているんだ、ということを聞いて、 \
「そうか、自分もこれまで大人の言うことにキチっと従って、いかにもまじめぇーに生きてきたけど、そんなんだから人生楽しめないか。変なこだわりは捨てて、もっと楽に、実用的に生きよう」
と、改心するきっかけを与えてくれたのです。

少年犯罪は実は減っているだとか、この本で明かされる個別の事実もさることながら、
そうしたある程度客観的なデータをもって、人間の「いいかげんさ」を教わったことが、
私の今のものの考え方にも大きく影響しているんじゃないかなぁと思っております。

その後から今に至るまで、私は[パオロ・マッツァーリノさんのブログ](http://pmazzarino.blog.fc2.com/)やその他の本も読んだりして、
彼のユーモラスで歯切れのいい発想や物言いに、毎度深く感心しております。 \
まぁ、そうは言っても著書はちょっとしか読んでないので、またどこかで時間を作りたいですね。

## 「初めてのPerl」

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=poe02-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4873115671" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


これは私が最初に買ったプログラミングの本でした。
実際のところその前にいろいろ立ち読みしてつまみ食いしていたので厳密に最初に読んだ本とは呼べませんが、
少なくとも最初に買ったのはこれです。

プログラミングを学ぶことの面白さ[^writing-code]もさることながら、
この本はいたるところでハッカーの精神 --- 怠惰を美徳とし、常に問題を解決する最も楽な方法を追究する心 --- を教えてくれました。

[^writing-code]:
覚えた当時私はプログラミング自体は苦手で、プログラミングを「する」ことの面白さはあまり感じられていなかったように思います。
私はただプログラミングの本を読むだけで楽しいという、特異な体質だったのです。

こじつけ気味ではありますが、こうした「ハッカーの精神」と先に触れた「人間のいいかげんさ」が妙なところで結びついたことが、
今の私のものの見方や、仕事のやり方、考え方を多かれ少なかれ形作っていったのではないか、そんな気がするのです。

本に書いてあることからそれますが、現実には、完全にこだわりを捨てて常に怠惰な方法をとるわけには行きません。
例えば本当に楽をするならば、コピペをたくさんすればいいし、テストもロクに書かなければいのです。 \
世の中の大抵のことがそうであるように、ソフトウェアの品質を高める「こだわり」は大抵の場合そうした純粋な怠惰さ、とは相反します。

もちろん「ハッカーの精神」とは、そんな単純なものではありません。 \
与えられた（面倒な）制約から、それらをかいくぐるように、最も簡単で単純な方法を追求する精神なのです。
コピペを忌避したりテストを書いたりするのも、ソースコードをシンプルに保ち、長い目で見て「楽ができる」方法だからです。

だから実際には、陳腐な結論ではありますが、いわゆる「バランスが大事」というやつで、
「ちょうどよくこだわりを捨てて」「ちょうどいい」楽をできるよう、見計らわなければなりません。
職業としてプログラミングを始めてからというもの、その見極めにいつも四苦八苦する毎日です。 \
ついこの間も「できるだけ速度が劣化しないページャーを作ろう」などと考え、自分の技術に溺れるあまり、
あとから見れば全然必要のなかったものを何日も悩んで作るという大失敗を犯してしまったところでした...。

# とりあえずここまでにしておきます...。

Yokohama.rb #50の時の熱気がまだ残っていたのか、この記事のアウトラインを書いた当時はもっといろいろ紹介したい本がありましたが、やっぱりちょっと疲れました。
もう当日から1週間も経ってしまってますし...。
なんだかいつにも増して独り善がりな記事になってしまった気もしますが、またこんなふうに自分の昔のことを思い出しながら書くのも面白そうですね。 \
それではまた気が向いたら。
