% hoge
% 山本悠滋
% 2015-03-21 モナド基礎勉強会

はじめに前口上

今からお話することははっきり言って全然基礎のお話ではありません。
もろめっちゃ応用の話になってしまいますが、
まぁ、基礎と応用は車の両輪だということでご容赦ください。

idea1

モナドトランスフォーマーって？
    モナドを組み合わせて「いろんなことができるモナド」を作る
        できすぎて使い方を誤ると命令型プログラミングと変わらなくなったりしない？

各アプリケーションでのモナドトランスフォーマーの使い方パターン

使っているコードだけ読んで知ったモナドトランスフォーマー
読んだだけで知ったモナドトランスフォーマー

モナドトランスフォーマーで構築するときのパターン
    newtypeで隠蔽する
        個々のMonad stackを使わない関数があっても柔軟にできる
        オブジェクトのインスタンス変数みたい！？
    常にPureな関数になるのでテストしやすさなどのメリットは維持される

Idea2

ここまでやって得たモナドの理解（モナドというよりFunctorの話？）
    そういうデータ構造がある、というよりも「そういう性質の処理（またの名を計算）がある」と考えたほうがしっくり来た。
        例えば
            Maybeは「失敗しているか成功しているか確認する」
            Const（モナドじゃないですが）は、結局のところ決まった値を返す処理
            Identityは受け取った値をそのまま返す処理
            ListはListの要素を1個ずつ取り出す処理

    プログラマ的な視点で見ると
        関数が値を返すたびにやらなけならないこと
        「やらなければならないこと」がある関数がたくさんあると役に立つ
            see http://the.igreque.info/posts/2014-05-11-monad-as-have-to-do.html
    モナド

idea3
    Reader, State, Writerはこう使うっぽい。
