% Crispy in a Nutshell
% 山本悠滋
% 2014-09-21 Ruby Hiroba

# はじめまして！

- [山本悠滋](https://plus.google.com/u/0/+YujiYamamoto_igrep/about)([\@igrep](https://twitter.com/igrep)) 25歳♂
- [Sansan](http://www.sansan.com/)という会社でRailsを触ってます。
- Yokohama.rb の RubyKaja 2014に選ばれました。ありがとう！
- [Haskellの勉強会](http://connpass.com/series/754/)をツキイチでやってます！

# 今日話すこと

- crispyというgemを作ったので紹介させてください！
- Star [github.com/igrep/crispy](http://github.com/igrep/crispy)

# What's Crispy

- New test double library for Ruby.
    - Rivals: rspec-mocks, rr, etc.
- Test spy for **ANY** object
    - with double.
- No mock.

# 何が嬉しい？

- Mockを使ったテストを除く**あらゆる**テストは、
    - 期待する内容（expectations）を、テスト対象となる処理（subject）のあとに書く。
        ```ruby
        let!(:returned_value){ subject.some_subject_method }
        it { is_expected.to be_some_expected_state }
        it { expect(returned_value).to eq 1 }
        ```

# 何が嬉しい？

- でも、Mockを使うと...
    ```ruby
    it do
      expect(some_other_object).to receive(:some_other_method)
      subject.some_subject_method
    end
    ```
- `subject.some_subject_method` のトコがDRYじゃない \(\>\<\)

# 何が嬉しい？

- 更に嫌なケース
    ```ruby
    before do
      # expectがallowに変わっただけやん...
      allow(some_other_object).to receive(:some_other_method)
    end
    # ... ここに前のスライドのコードが入ります ...
    ```

# 何が嬉しい？

- でも、spyなら
    ```ruby
    let!(:some_other_object){ double 'spy' }
    let!(:returned_value) do
      subject.some_subject_method(some_other_object)
    end
    it { expect(some_other_object).to have_received(:some_other_method) }
    ```


# 何が嬉しい？

- でも、（他の）spyは
    - doubleとか、特殊な専用のオブジェクトにしか使えない...orz
    - expect(subject).to have_received()みたいなことはできない

# 他にできること

- おなじみのEnumerableのメソッドで、message expectationができるよ！

# まとめ

- HaskellのMonadは型クラス
- Star [github.com/igrep/crispy](http://github.com/igrep/crispy)
