---
title: 関数型プログラミングから予測可能プログラミングへ: 純粋な関数・イミュータブルな構造
author: Yuji Yamamoto
tags: Haskell
date: August 29, 2015
...
---

*[このシリーズの目次はこちら](/posts/2015/2-predictable-programming-index.mkd)*

今回の記事で述べることは、恐らくいわゆる「関数型プログラミング」の特徴として、
十分に知られたものであろう。
本記事ではhoge

# 純粋な関数

「純粋な関数」が何なのかは、[前の記事](/posts/2015/1-predictable-programming.html#definitionFunctionalProgramming)でも述べた。  
そうした「純粋な関数」が[「予測可能プログラミング」](/posts/2015/1-predictable-programming.html#definitionPredictableProgramming)
にもたらすメリットは実にシンプルで、
関数がプログラムに及ぼす影響の範囲が、
結果を渡した先(束縛する変数や別の関数の引数)のみに限定されるので、
余計なことを考えなくてよい、ということである。

例えば、JavaScriptの`Array#sort`を考えてみよう。

```javascript
var sorted = someArray.sort();
```

## 力の弱い関数

